{
	"name": "dailyPopulate",
	"properties": {
		"description": "Populate tables daily",
		"activities": [
			{
				"name": "Populate Customer",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['first_name']"
								},
								"sink": {
									"name": "first_name",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['last_name']"
								},
								"sink": {
									"name": "last_name",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['email']"
								},
								"sink": {
									"name": "email",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['gender']"
								},
								"sink": {
									"name": "gender",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['country']"
								},
								"sink": {
									"name": "country",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['city']"
								},
								"sink": {
									"name": "city",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['address']"
								},
								"sink": {
									"name": "address",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lat']"
								},
								"sink": {
									"name": "lat",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['long']"
								},
								"sink": {
									"name": "long",
									"type": "Double"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "MockCustomer",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dbCustomers",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Populate Store",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Populate Customer",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['country']"
								},
								"sink": {
									"name": "country",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['city']"
								},
								"sink": {
									"name": "city",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['postal']"
								},
								"sink": {
									"name": "postal",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lat']"
								},
								"sink": {
									"name": "lat",
									"type": "Double"
								}
							},
							{
								"source": {
									"path": "$['long']"
								},
								"sink": {
									"name": "long",
									"type": "Double"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "MockStore",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dbStores",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update Products_Amazon",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Populate Store",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "provider",
								"value": "Amazon US"
							}
						],
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"asin",
								"product",
								"totalRatings",
								"price"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['image']"
								},
								"sink": {
									"name": "imageURL",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['asin']"
								},
								"sink": {
									"name": "asin",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['title']"
								},
								"sink": {
									"name": "product",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['currency']"
								},
								"sink": {
									"name": "currency",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['price']"
								},
								"sink": {
									"name": "price",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "['avg_rating']"
								},
								"sink": {
									"name": "avgRating",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "['num_ratings']"
								},
								"sink": {
									"name": "totalRatings",
									"type": "Int32"
								}
							},
							{
								"source": {
									"path": "$['provider']"
								},
								"sink": {
									"name": "provider",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['results']"
					}
				},
				"inputs": [
					{
						"referenceName": "productAPI",
						"type": "DatasetReference",
						"parameters": {
							"asins": "B07FXYLSMB%2CB000PKMAOY%2CB08DS45Y8W%B07R59RP9W%B000NSGUJ4%B00E3J9QSG%B00CIZ7I14%B008N8K15K%B08RXL8YF6",
							"region": "US",
							"page": "1"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "dbProducts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Generate 10000 sales",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update Products_Amazon",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "DECLARE @Counter INT\nSET @Counter=0\n\nWHILE (@Counter <=10000)\nBEGIN\nWITH cte1 AS (\n   SELECT TOP 1 id\n   FROM dbo.customer\n   ORDER BY NEWID()\n), cte2 AS (\n   SELECT TOP 1 id\n   FROM dbo.product\n   ORDER BY NEWID()\n), cte3 AS (\n   SELECT TOP 1 id\n   FROM dbo.store\n   ORDER BY NEWID()\n)\nINSERT INTO dbo.sales (customerid, productid, storeid)\nVALUES ((SELECT id FROM cte1),(SELECT id FROM cte2),(SELECT id FROM cte3))\nSET @Counter = @Counter +1\nEND",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dbSales",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": []
	}
}